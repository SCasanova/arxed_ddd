rbind(read_csv("fourth_2018.csv") %>% mutate(season = 2018)) %>%
rbind(read_csv("fourth_2017.csv") %>% mutate(season = 2017)) %>%
rbind(read_csv("fourth_2016.csv") %>% mutate(season = 2016)) %>%
rbind(read_csv("fourth_2015.csv") %>% mutate(season = 2015)) %>%
rbind(read_csv("fourth_2014.csv") %>% mutate(season = 2014))
setwd("~/Desktop/R/Shiny/4thdowns")
fourth_downs <- read_csv("fourth_2021.csv") %>%
mutate(season = 2021) %>%
rbind(read_csv("fourth_2020.csv") %>% mutate(season = 2020)) %>%
rbind(read_csv("fourth_2019.csv") %>% mutate(season = 2019)) %>%
rbind(read_csv("fourth_2018.csv") %>% mutate(season = 2018)) %>%
rbind(read_csv("fourth_2017.csv") %>% mutate(season = 2017)) %>%
rbind(read_csv("fourth_2016.csv") %>% mutate(season = 2016)) %>%
rbind(read_csv("fourth_2015.csv") %>% mutate(season = 2015)) %>%
rbind(read_csv("fourth_2014.csv") %>% mutate(season = 2014))
fourth_downs %>%
filter(go_boost >= 2) %>%
group_by(posteam, week) %>%
summarize(n = sum(go)) %>%
View()
fourth_downs %>%
filter(go_boost >= 2) %>%
group_by(posteam, week, season) %>%
summarize(n = sum(go)) %>%
View()
library(ggplot2)
library(tidyverse)
library(readxl)
library(ggimage)
library(nflfastR)
library(ggtext)
library(statar)
library(nfl4th)
for (i in 2021:2021){
load_4th_pbp(i) %>%
filter(!is.na(go_boost)) %>%
mutate(xwp_boost = if_else(go == 100, go_boost, -go_boost),
fourth_success = if_else(xwp_boost > 0, 1, 0)) %>%
select(posteam, defteam, posteam_score, defteam_score, week, qtr, desc, wp, ydstogo,
go_boost:go, xwp_boost, fourth_success, yrdln, game_seconds_remaining, first_down) %>%
write_csv(paste0("/Users/tuckerboynton/Desktop/R/Shiny/4thdowns/fourth_", i, ".csv"))
}
shiny::runApp()
library(plotly)
library(plotly)
setwd("~/Desktop/R/ArxEd/ArxApp")
library(shiny)
library(tidyverse)
library(gt)
library(webshot)
library(shinyTree)
library(lazyeval)
library(shinyjs)
library(plotly)
options(scipen = 99999)
color_palette <- c("darkred", "white", "darkgreen")
gt_theme_538 <- function(data,...) {
data %>%
opt_all_caps()  %>%
opt_table_font(
font = list(default_fonts())
) %>%
tab_style(
style = cell_borders(
sides = "bottom", color = "black", weight = px(3)
),
locations = cells_body(
columns = TRUE,
# This is a relatively sneaky way of changing the bottom border
# Regardless of data size
rows = nrow(data$`_data`)
)
)  %>%
tab_options(
column_labels.background.color = "white",
table.border.top.width = px(3),
table.border.top.color = "white",
table.border.bottom.color = "white",
table.border.bottom.width = px(3),
table_body.border.bottom.color = "black",
column_labels.border.top.width = px(3),
column_labels.border.top.color = "black",
column_labels.border.lr.color = "grey",
column_labels.vlines.style = "solid",
table_body.vlines.style = "solid",
table_body.vlines.color = "lightgrey",
column_labels.border.bottom.width = px(3),
column_labels.border.bottom.color = "black",
data_row.padding = px(3),
source_notes.font.size = 12,
table.font.size = 16,
heading.align = "left",
...
)
}
dart <- read_csv("all_dart.csv") %>%
select(-c(
`Berlin-Boylston...36`,
`Brooke Charter School (District)...58`,
`Edward M. Kennedy Academy for Health Careers (Horace Mann Charter) (District)...107`,
`Greenfield Commonwealth Virtual District...136`
)) %>%
distinct() %>%
rename(district_name = `...1`) %>%
as.data.frame()
school_info <- read_csv("school_info.csv") %>%
mutate(
dart_name = case_when(
district_name == "Seven Hills Charter Public (District)" ~ "Learning First Charter Public School (District)",
district_name == "Massachusetts Virtual Academy at Greenfield Commonwealth Virtual District" ~ "Greater Commonwealth Virtual District",
district_name == "Hampden Charter School of Science (District)" ~ "Hampden Charter School of Science East (District)",
district_name == "Tri County Regional Vocational Technical" ~ "Tri-County Regional Vocational Technical",
district_name == "Brooke Charter School East Boston (District)" ~ "Brooke Charter School (District)",
district_name == "Greater Commonwealth Virtual District" ~ "Greenfield Commonwealth Virtual District",
district_name == "Southern Worcester County Regional Vocational School District" ~ "Southern Worcester County Regional Vocational Technical",
district_name == "Boylston" ~ "Berlin-Boylston",
district_name == "Berlin" ~ "Berlin-Boylston",
TRUE ~ district_name),
district_name = case_when(
district_name == "Seven Hills Charter Public (District)" ~ "Learning First Charter Public School (District)",
district_name == "Massachusetts Virtual Academy at Greenfield Commonwealth Virtual District" ~ "Greater Commonwealth Virtual District",
district_name == "Tri County Regional Vocational Technical" ~ "Tri-County Regional Vocational Technical",
district_name == "Greater Commonwealth Virtual District" ~ "Greenfield Commonwealth Virtual District",
district_name == "Southern Worcester County Regional Vocational School District" ~ "Southern Worcester County Regional Vocational Technical",
TRUE ~ district_name))
district_names <- school_info %>%
select(district_name) %>%
distinct()
years <- school_info %>%
select(year) %>%
distinct()
statistic_names <- c(
"Total Enrollment",
"Total Teacher FTE",
"% Teachers Licensed",
"Student:Teacher Ratio",
"% Teachers Experienced",
"% Teachers w/o Waiver",
"% Teachers Teaching in Field",
"Total Core Academic Classes",
"% Core Classes Taught by Exp Teachers",
"Total Salary",
"Average Salary",
"In-District Expenditure",
"In-District Pupil FTE",
"In-District Expenditure per Pupil",
"Total Expenditure",
"Total Pupil FTE",
"Total Expenditure per Pupil"
)
statistic_names_full <- c(
"District",
"District Code",
"Year",
"1st Year",
"2nd Year",
"PK Enrollment",
"K Enrollment",
"G1 Enrollment",
"G2 Enrollment",
"G3 Enrollment",
"G4 Enrollment",
"G5 Enrollment",
"G6 Enrollment",
"G7 Enrollment",
"G8 Enrollment",
"G9 Enrollment",
"G10 Enrollment",
"G11 Enrollment",
"G12 Enrollment",
"SP Enrollment",
"Total Enrollment",
"Total Teacher FTE",
"% Teachers Licensed",
"Student:Teacher Ratio",
"% Teachers Experienced",
"% Teachers w/o Waiver",
"% Teachers Teaching in Field",
"Total Core Academic Classes",
"% Core Classes Taught by Exp Teachers",
"Total Salary",
"Average Salary",
"In-District Expenditure",
"In-District Pupil FTE",
"In-District Expenditure per Pupil",
"Total Expenditure",
"Total Pupil FTE",
"Total Expenditure per Pupil",
"Students Advanced/Proficient in Bio MCAS",
"% Students Advanced/Proficient in Bio MCAS",
"Students Advanced in Bio MCAS",
"% Students Advanced in Bio MCAS",
"Students Proficient in Bio MCAS",
"% Students Proficient in Bio MCAS",
"Students Need Imp Bio MCAS",
"% Students Need Imp Bio MCAS",
"Students Warning/Failing Bio MCAS",
"% Students Warning/Failing Bio MCAS",
"Students Taking Bio MCAS",
"Students Advanced/Proficient in Phy MCAS",
"% Students Advanced/Proficient in Phy MCAS",
"Students Advanced in Phy MCAS",
"% Students Advanced in Phy MCAS",
"Students Proficient in Phy MCAS",
"% Students Proficient in Phy MCAS",
"Students Need Imp Phy MCAS",
"% Students Need Imp Phy MCAS",
"Students Warning/Failing Phy MCAS",
"% Students Warning/Failing Phy MCAS",
"Students Taking Phy MCAS",
"Students Advanced/Proficient in Tec MCAS",
"% Students Advanced/Proficient in Tec MCAS",
"Students Advanced in Tec MCAS",
"% Students Advanced in Tec MCAS",
"Students Proficient in Tec MCAS",
"% Students Proficient in Tec MCAS",
"Students Need Imp Tec MCAS",
"% Students Need Imp Tec MCAS",
"Students Warning/Failing Tec MCAS",
"% Students Warning/Failing Tec MCAS",
"Students Taking Tec MCAS",
"Students Advanced/Proficient in Che MCAS",
"% Students Advanced/Proficient in Che MCAS",
"Students Advanced in Che MCAS",
"% Students Advanced in Che MCAS",
"Students Proficient in Che MCAS",
"% Students Proficient in Che MCAS",
"Students Need Imp Che MCAS",
"% Students Need Imp Che MCAS",
"Students Warning/Failing Che MCAS",
"% Students Warning/Failing Che MCAS",
"Students Taking Che MCAS",
"SAT Tests Taken",
"SAT Reading/Writing Score",
"SAT Math Score",
"AP Tests Taken",
"AP 1s",
"AP 2s",
"AP 3s",
"AP 4s",
"AP 5s",
"AP 1-2 %",
"AP 3-5 %",
"DART Name",
"City",
"County",
"League"
)
axis_options <- set_names(colnames(school_info), statistic_names_full)
district <- "Concord-Carlisle"
comp_districts <- c()
comp_year <- "2018-19"
input$y <- "total_exp"
y <- "total_exp"
plot_data <- school_info %>%
filter(district_name %in% comp_districts | district_name == district,
year == comp_year, !is.na(get(y)))
View(plot_data)
plot_data$y
plot_data[y]
plot_data %>% pull(y)
runApp()
runApp()
runApp()
?reorder
plot_data <- school_info %>%
filter(district_name %in% comp_districts | district_name == district,
year == comp_year, !is.na(get(y))) %>%
reorder(x = district_name, X = get(y), FUN = sum)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?stringr::word
school_info <- read_csv("school_info.csv") %>%
mutate(
dart_name = case_when(
district_name == "Seven Hills Charter Public (District)" ~ "Learning First Charter Public School (District)",
district_name == "Massachusetts Virtual Academy at Greenfield Commonwealth Virtual District" ~ "Greater Commonwealth Virtual District",
district_name == "Hampden Charter School of Science (District)" ~ "Hampden Charter School of Science East (District)",
district_name == "Tri County Regional Vocational Technical" ~ "Tri-County Regional Vocational Technical",
district_name == "Brooke Charter School East Boston (District)" ~ "Brooke Charter School (District)",
district_name == "Greater Commonwealth Virtual District" ~ "Greenfield Commonwealth Virtual District",
district_name == "Southern Worcester County Regional Vocational School District" ~ "Southern Worcester County Regional Vocational Technical",
district_name == "Boylston" ~ "Berlin-Boylston",
district_name == "Berlin" ~ "Berlin-Boylston",
TRUE ~ district_name),
district_name = case_when(
district_name == "Seven Hills Charter Public (District)" ~ "Learning First Charter Public School (District)",
district_name == "Massachusetts Virtual Academy at Greenfield Commonwealth Virtual District" ~ "Greater Commonwealth Virtual District",
district_name == "Tri County Regional Vocational Technical" ~ "Tri-County Regional Vocational Technical",
district_name == "Greater Commonwealth Virtual District" ~ "Greenfield Commonwealth Virtual District",
district_name == "Southern Worcester County Regional Vocational School District" ~ "Southern Worcester County Regional Vocational Technical",
TRUE ~ district_name),
short_district_name = stringr::word(district, 1, 2))
View(school_info)
school_info <- read_csv("school_info.csv") %>%
mutate(
dart_name = case_when(
district_name == "Seven Hills Charter Public (District)" ~ "Learning First Charter Public School (District)",
district_name == "Massachusetts Virtual Academy at Greenfield Commonwealth Virtual District" ~ "Greater Commonwealth Virtual District",
district_name == "Hampden Charter School of Science (District)" ~ "Hampden Charter School of Science East (District)",
district_name == "Tri County Regional Vocational Technical" ~ "Tri-County Regional Vocational Technical",
district_name == "Brooke Charter School East Boston (District)" ~ "Brooke Charter School (District)",
district_name == "Greater Commonwealth Virtual District" ~ "Greenfield Commonwealth Virtual District",
district_name == "Southern Worcester County Regional Vocational School District" ~ "Southern Worcester County Regional Vocational Technical",
district_name == "Boylston" ~ "Berlin-Boylston",
district_name == "Berlin" ~ "Berlin-Boylston",
TRUE ~ district_name),
district_name = case_when(
district_name == "Seven Hills Charter Public (District)" ~ "Learning First Charter Public School (District)",
district_name == "Massachusetts Virtual Academy at Greenfield Commonwealth Virtual District" ~ "Greater Commonwealth Virtual District",
district_name == "Tri County Regional Vocational Technical" ~ "Tri-County Regional Vocational Technical",
district_name == "Greater Commonwealth Virtual District" ~ "Greenfield Commonwealth Virtual District",
district_name == "Southern Worcester County Regional Vocational School District" ~ "Southern Worcester County Regional Vocational Technical",
TRUE ~ district_name),
short_district_name = stringr::word(district, 1, 2, sep = " "))
school_info <- read_csv("school_info.csv") %>%
mutate(
dart_name = case_when(
district_name == "Seven Hills Charter Public (District)" ~ "Learning First Charter Public School (District)",
district_name == "Massachusetts Virtual Academy at Greenfield Commonwealth Virtual District" ~ "Greater Commonwealth Virtual District",
district_name == "Hampden Charter School of Science (District)" ~ "Hampden Charter School of Science East (District)",
district_name == "Tri County Regional Vocational Technical" ~ "Tri-County Regional Vocational Technical",
district_name == "Brooke Charter School East Boston (District)" ~ "Brooke Charter School (District)",
district_name == "Greater Commonwealth Virtual District" ~ "Greenfield Commonwealth Virtual District",
district_name == "Southern Worcester County Regional Vocational School District" ~ "Southern Worcester County Regional Vocational Technical",
district_name == "Boylston" ~ "Berlin-Boylston",
district_name == "Berlin" ~ "Berlin-Boylston",
TRUE ~ district_name),
district_name = case_when(
district_name == "Seven Hills Charter Public (District)" ~ "Learning First Charter Public School (District)",
district_name == "Massachusetts Virtual Academy at Greenfield Commonwealth Virtual District" ~ "Greater Commonwealth Virtual District",
district_name == "Tri County Regional Vocational Technical" ~ "Tri-County Regional Vocational Technical",
district_name == "Greater Commonwealth Virtual District" ~ "Greenfield Commonwealth Virtual District",
district_name == "Southern Worcester County Regional Vocational School District" ~ "Southern Worcester County Regional Vocational Technical",
TRUE ~ district_name),
short_district_name = stringr::word(district))
runApp()
# get live games
live_games <- readRDS(url(
"http://www.habitatring.com/games_alt.rds"
)) %>%
dplyr::filter(
# hasn't finished yet
is.na(result),
# happening today
gameday == as.character(lubridate::today("US/Pacific"))
) %>%
dplyr::mutate(
espn = dplyr::case_when(
# hard code for playoff games not in Lee's file
game_id == "2021_19_LV_CIN"   ~ "401326627",
game_id == "2021_19_NE_BUF"   ~ "401326626",
game_id == "2021_19_PHI_TB"   ~ "401326630",
game_id == "2021_19_SF_DAL"   ~ "401326629",
game_id == "2021_19_PIT_KC"   ~ "401326628",
game_id == "2021_19_ARI_LA"   ~ "401326625",
TRUE ~ espn
)
) %>%
rowwise() %>%
## Check that drive info exists on ESPN (i.e., that it's started)
mutate(
started = !is.null(httr::content(httr::GET(game_url, query = list(event = espn)))[["drives"]][["previous"]])
) %>%
ungroup() %>%
dplyr::filter(started == 1) %>%
dplyr::select(game_id, espn, home_team, away_team, week)
game_url <- glue::glue("http://site.api.espn.com/apis/site/v2/sports/football/nfl/summary")
# get live games
live_games <- readRDS(url(
"http://www.habitatring.com/games_alt.rds"
)) %>%
dplyr::filter(
# hasn't finished yet
is.na(result),
# happening today
gameday == as.character(lubridate::today("US/Pacific"))
) %>%
dplyr::mutate(
espn = dplyr::case_when(
# hard code for playoff games not in Lee's file
game_id == "2021_19_LV_CIN"   ~ "401326627",
game_id == "2021_19_NE_BUF"   ~ "401326626",
game_id == "2021_19_PHI_TB"   ~ "401326630",
game_id == "2021_19_SF_DAL"   ~ "401326629",
game_id == "2021_19_PIT_KC"   ~ "401326628",
game_id == "2021_19_ARI_LA"   ~ "401326625",
TRUE ~ espn
)
) %>%
rowwise() %>%
## Check that drive info exists on ESPN (i.e., that it's started)
mutate(
started = !is.null(httr::content(httr::GET(game_url, query = list(event = espn)))[["drives"]][["previous"]])
) %>%
ungroup() %>%
dplyr::filter(started == 1) %>%
dplyr::select(game_id, espn, home_team, away_team, week)
# get updated plays from ongoing games
plays <- purrr::map_df(1 : nrow(live_games), function(x) {
message(glue::glue("{x}: game {live_games %>% dplyr::slice(x) %>% pull(espn)}"))
espnscrapeR::get_nfl_pbp(live_games %>% dplyr::slice(x) %>% pull(espn))
})
# get updated plays from ongoing games
plays <- purrr::map_df(1 : nrow(live_games), function(x) {
message(glue::glue("{x}: game {live_games %>% dplyr::slice(x) %>% pull(espn)}"))
espnscrapeR::get_nfl_pbp(live_games %>% dplyr::slice(x) %>% pull(espn))
})
View(live_games)
# get updated plays from ongoing games
plays <- purrr::map_df(1 : nrow(live_games), function(x) {
message(glue::glue("{x}: game {live_games %>% dplyr::slice(x) %>% pull(espn)}"))
espnscrapeR::get_nfl_pbp(live_games %>% dplyr::slice(x) %>% pull(espn))
})
# get live games
live_games <- readRDS(url(
"http://www.habitatring.com/games_alt.rds"
)) %>%
# dplyr::filter(
#
#   # hasn't finished yet
#   is.na(result),
#
#   # happening today
#   gameday == as.character(lubridate::today("US/Pacific"))
#
# ) %>%
dplyr::mutate(
espn = dplyr::case_when(
# hard code for playoff games not in Lee's file
game_id == "2021_19_LV_CIN"   ~ "401326627",
game_id == "2021_19_NE_BUF"   ~ "401326626",
game_id == "2021_19_PHI_TB"   ~ "401326630",
game_id == "2021_19_SF_DAL"   ~ "401326629",
game_id == "2021_19_PIT_KC"   ~ "401326628",
game_id == "2021_19_ARI_LA"   ~ "401326625",
TRUE ~ espn
)
) %>%
rowwise() %>%
filter(espn == "401326630") %>%
## Check that drive info exists on ESPN (i.e., that it's started)
mutate(
started = !is.null(httr::content(httr::GET(game_url, query = list(event = espn)))[["drives"]][["previous"]])
) %>%
ungroup() %>%
dplyr::filter(started == 1) %>%
dplyr::select(game_id, espn, home_team, away_team, week)
# get updated plays from ongoing games
plays <- purrr::map_df(1 : nrow(live_games), function(x) {
message(glue::glue("{x}: game {live_games %>% dplyr::slice(x) %>% pull(espn)}"))
espnscrapeR::get_nfl_pbp(live_games %>% dplyr::slice(x) %>% pull(espn))
})
View(plays)
runApp()
library(DBI)
library(RPostgres)
library(nflfastR)
future::plan("multisession")
conn <- DBI::dbConnect(RPostgres::Postgres(),
dbname = "d424s82dq4nbup",
host = "ec2-3-229-204-193.compute-1.amazonaws.com",
port = "5432",
user = "u6t13al44ceg5d",
password = "p2c476664475026bb74fc971407d15372644b8b8edaf1468ab5faeb5dcdfea6b4")
update_db(db_connection = conn, tblname = "nflfastr_pbp", force_rebuild = FALSE)
runApp()
runApp()
runApp()
runApp()
